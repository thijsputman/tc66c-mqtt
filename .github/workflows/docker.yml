name: Docker

on: [push]

jobs:
  pull:
    name: Attempt to pull from Docker Hub
    runs-on: ubuntu-20.04
    environment: production
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Pull from Docker Hub
        run: docker pull thijsputman/tc66c-mqtt:"${GITHUB_SHA:0:7}"
  build:
    name: Build image
    runs-on: ubuntu-20.04
    needs: pull
    # Run only when "pull" failed (i.e. the Docker image isn't on Docker Hub)
    if: needs.pull.result == 'failure' && always()
    environment: ci
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: Build image
        run: |
          docker build \
            --tag thijsputman/tc66c-mqtt:"${GITHUB_SHA:0:7}" \
            --output type=docker,dest=/tmp/buildx.tar \
            --platform linux/arm64,linux/armv7,linux/amd64 \
            .
          docker load --input /tmp/buildx.tar
      # Store the Docker image for testing/debugging purposes
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: buildx
          path: /tmp/buildx.tar
          retention-days: 5
  tagMain:
    name: Tag image (main-branch)
    needs: [pull, build]
    runs-on: ubuntu-20.04
    # Run only when either "pull" or "build" succeeded _and_ this was a push to
    # the main-branch
    if: >
      (needs.pull.result == 'success' || needs.build.result == 'success') &&
      github.ref == 'refs/heads/main' && always()
    environment: production
    steps:
      - name: Tag Docker image
        run: |
          docker tag thijsputman/tc66c-mqtt:"${GITHUB_SHA:0:7}" \
            thijsputman/tc66c-mqtt:latest
  tagNewTag:
    name: Tag image (new tag)
    needs: [pull, build]
    runs-on: ubuntu-20.04
    # Run only when either "pull" or "build" succeeded _and_ this was a push
    # creating a new tag
    if: >
      (needs.pull.result == 'success' || needs.build.result == 'success') &&
      startsWith(github.ref, 'refs/tags/') && always()
    environment: production
    steps:
      - name: Tag Docker image
        run: |
          ref=(${GITHUB_REF//\// })
          tag=${ref[2]}
          if [[ ${tag:0:1} == "v" ]] ; then
            tag=${tag:1}
          fi
          if [[ "$tag" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]] ; then
            docker tag thijsputman/tc66c-mqtt:"${GITHUB_SHA:0:7}" \
              thijsputman/tc66c-mqtt:stable
          fi
          docker tag thijsputman/tc66c-mqtt:"${GITHUB_SHA:0:7}" \
            thijsputman/tc66c-mqtt:"$tag"
  push:
    name: Push to Docker Hub
    needs: [tagMain, tagNewTag]
    runs-on: ubuntu-20.04
    # Run only if either "tagMain" or "tagNewTag" succeeded (indicating there
    # are tags to be pushed to Docker Hub)
    if: >
      (needs.tagMain.result == 'success' || needs.tagNewTag.result == 'success') &&
      always()
    environment: production
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    # - name: Push to Docker Hub
    #   run: |
    #     docker push --all-tags thijsputman/tc66c-mqtt
