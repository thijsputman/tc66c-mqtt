name: Docker

on: [push]

jobs:
  pull:
    name: Attempt to pull from Docker Hub
    runs-on: ubuntu-20.04
    environment: production
    outputs:
      result: ${{ steps.pull.outputs.result }}
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Pull from Docker Hub
        id: pull
        run: >
          if docker pull thijsputman/tc66c-mqtt:"${GITHUB_SHA:0:7}" ; then
            echo "::set-output name=result::success"
          else
            echo "::set-output name=result::failure"
          fi
  build:
    name: Build image
    runs-on: ubuntu-20.04
    needs: pull
    # Failed to pull the image from Docker Hub
    if: needs.pull.outputs.result == 'failure'
    environment: ci
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: Build image
        run: |
          docker build \
            --platform linux/arm64,linux/armv7,linux/amd64 \
            .
          docker build \
            --tag thijsputman/tc66c-mqtt:"${GITHUB_SHA:0:7}" \
            --output type=docker,dest=/tmp/buildx-arm64.tar \
            --platform linux/arm64 \
            .
          docker build \
            --tag thijsputman/tc66c-mqtt:"${GITHUB_SHA:0:7}" \
            --output type=docker,dest=/tmp/buildx-armv7.tar \
            --platform linux/armv7 \
            .
          docker build \
            --tag thijsputman/tc66c-mqtt:"${GITHUB_SHA:0:7}" \
            --output type=docker,dest=/tmp/buildx-amd64.tar \
            --platform linux/amd64 \
            .
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: buildx
          path: /tmp/buildx-*.tar
          retention-days: 5
  tagMain:
    name: Tag image (main-branch)
    needs: [pull, build]
    runs-on: ubuntu-20.04
    # Docker image available and this was a push to the main-branch
    if: >
      (
        needs.pull.outputs.result == 'success' ||
        needs.build.result == 'success'
      ) && always()
    # ) && github.ref == 'refs/heads/main' && always()
    environment: production
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: buildx
          path: /tmp
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Tag Docker image
        run: |
          docker load --input /tmp/buildx-arm64.tar
          docker load --input /tmp/buildx-armv7.tar
          docker load --input /tmp/buildx-amd64.tar
          docker tag thijsputman/tc66c-mqtt:"${GITHUB_SHA:0:7}" \
            thijsputman/tc66c-mqtt:latest
      # - name: Push to Docker Hub
      #   run: |
      #     docker push --all-tags thijsputman/tc66c-mqtt
  tagNewTag:
    name: Tag image (new tag)
    needs: [pull, build]
    runs-on: ubuntu-20.04
    # Docker image available and this push created a new tag
    if: >
      (
        needs.pull.outputs.result == 'success' ||
        needs.build.result == 'success'
      ) && startsWith(github.ref, 'refs/tags/') && always()
    environment: production
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: buildx
          path: /tmp
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Tag Docker image
        run: |
          ref=(${GITHUB_REF//\// })
          tag=${ref[2]}
          if [[ ${tag:0:1} == "v" ]] ; then
            tag=${tag:1}
          fi
          if [[ "$tag" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]] ; then
            docker tag thijsputman/tc66c-mqtt:"${GITHUB_SHA:0:7}" \
              thijsputman/tc66c-mqtt:stable
          fi
          docker load --input /tmp/buildx-arm64.tar
          docker load --input /tmp/buildx-armv7.tar
          docker load --input /tmp/buildx-amd64.tar
          docker tag thijsputman/tc66c-mqtt:"${GITHUB_SHA:0:7}" \
            thijsputman/tc66c-mqtt:"$tag"
      # - name: Push to Docker Hub
      #   run: |
      #     docker push --all-tags thijsputman/tc66c-mqtt
